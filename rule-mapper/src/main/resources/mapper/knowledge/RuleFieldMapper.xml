<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zw.rule.mapper.knowledge.RuleFieldMapper">

    <resultMap type="com.zw.rule.knowledge.po.RuleField" id="RuleField">
	     <id column="id" property="id"/>    
	     <result column="logical_symbol" property="logicalSymbol"/>
	     <result column="operator" property="operator"/> 
	     <result column="cn_name" property="cnName"/>
	     <result column="field_value" property="fieldValue"/> 
	     <result column="rule_id" property="ruleId"/>
         <result column="field_id" property="fieldId"/> 
         <result column="en_name" property="enName"/>
         <result column="value_type" property="valueType"/>
         <result column="restrain_scope" property="restrainScope"/>
    </resultMap>

    <sql id ="Base_Column">
        r.id ,
        r.logical_symbol,
        r.operator,
        t.cn_name as cnName,
        r.field_value as fieldValue,
        r.rule_id as ruleId,
        r.field_id as fieldId,
        t.en_name as enName,
        t.value_type as valueType,
        t.restrain_scope as restrainScope
    </sql>

    <select id = "getFieldList" parameterType = "long" resultType = "com.zw.rule.knowledge.po.RuleField">
        select  <include refid="Base_Column"/> from zw_rule_field r  left join zw_field t on r.field_id = CONCAT(t.id,'|',t.en_name)  where r.rule_id = #{id} order by r.id asc
    </select>

    <insert id = "insertField"   parameterType="java.util.List" > 
	    insert into zw_rule_field 
	    (logical_symbol,operator,field_value,rule_id,field_id)
	    values
	    <foreach collection="list" index="index" item="item"  separator="," >
		   (
			 #{item.logicalSymbol},
			 #{item.operator},
			 #{item.fieldValue},
			 #{item.ruleId},
			 TRIM(#{item.fieldId})
		   )   
		</foreach>
    </insert>
      
    <select id = "selectByPrimaryKey"  parameterType = "long"  resultType="RuleField">
      select <include refid="Base_Column"/> from zw_rule_field where id = #{id}
    </select>
    
    <update id = "updateField"   parameterType="java.util.List" > 
	     <foreach collection="list" index="index" item="item"  separator=";" >
		       update zw_rule_field set
		       <if test ="item.logical_symbol != null">
		        logical = #{item.logical_symbol}
		       </if>
		       <if test ="item.operator != null">
		        ,operator = #{item.operator}   
		       </if>
		        <if test ="item.fieldValue != null">
		        ,field_value = #{item.fieldValue}  
		       </if>
		       <if test ="item.fieldId != null">
		        ,field_id = TRIM(#{item.fieldId}) 
		       </if>
		       where id = #{item.id}
	      </foreach>
    </update>
    
    <delete id="deleteField" parameterType="java.util.List">
        <foreach collection="list" index="index" item="item"  separator=";" >
           delete from zw_rule_field where id = #{item.id}
        </foreach>
    </delete>
    
     <select id = "getNodeByList" parameterType = "nodeKnowledge" resultMap = "RuleField">
      select zw_rule_field.`field_id` fieldId from zw_rule_field  WHERE zw_rule_field.rule_id IN( SELECT knowledge_id FROM zw_node_knowledge_link WHERE zw_node_knowledge_link.`node_id`=#{nodeId} 
         AND zw_node_knowledge_link.`knowledge_type`=#{knowledgeType}   )
    </select>
    <select id = "selectNodeByRuleList" parameterType = "nodeKnowledge" resultType="RuleField">
      select zw_rule_field.`field_id` fieldId from zw_rule_field  WHERE zw_rule_field.rule_id IN( SELECT knowledge_id FROM zw_node_knowledge_link WHERE zw_node_knowledge_link.`node_id`=#{nodeId} 
         AND zw_node_knowledge_link.`knowledge_type`=#{knowledgeType}) 
    </select>

    <!-- 普通规则查询字段 -->

    <select id = "selectByRuleList" parameterType="map" resultType="ruleField">
        select zw_rule_field.`field_id` fieldId from zw_rule_field  WHERE zw_rule_field.rule_id in
        <foreach collection="Ids" item="item" index="index" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

</mapper>